#!/bin/sh
# /etc/init.d/minecraft
# version 1.0
# sourced and modified from
# https://minecraft.gamepedia.com/Tutorials/Server_startup_script#Init.d_Script

# not sure i need this part

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs screen-cleanup
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO

#Settings
WORLDS="/var/lib/minecraft"
CURRENT="$(uname -n)"
NOW="$(date +%Y.%m.%d.%H.%M)"
BACKUPDIR="/var/lib/minecraftbackups"
JARFILE="/root/server.jar"
JAVAOPTS="nogui"

mc_start_cmd() {
	screen -dmS "$CURRENT" java -jar "$JARFILE" "$JAVAOPTS"
}

mc_server_customize() {
	if [ ! -f "$WORLDS"/"$CURRENT"/server.properties ] ; then
		SERVFILE="$WORLDS"/"$CURRENT"/server.properties
		cp "$WORLDS"/ENVFOLDER/server.properties.base "$SERVFILE"
		. "$WORLDS"/ENVFOLDER/"$CURRENT"
		# game type
		sed -i "s/gamemode=survival/gamemode=${GAMETYPE}/g" "$SERVFILE"
		# difficulty
		sed -i "s/difficulty=easy/difficulty=${DIFFICULTY}/g" "$SERVFILE"
		# players
		sed -i "s/max-players=20/max-players=${PLAYERS}/g" "$SERVFILE"
		echo "eula=true" > "$WORLDS"/"$CURRENT"/eula.txt
	fi
}

mc_server_start() {
	if ! screen -ls | grep "$CURRENT" ; then
		[ -d "$WORLDS"/"$CURRENT" ] || mkdir -p "$WORLDS"/"$CURRENT"
		mc_server_customize
		cd "$WORLDS"/"$CURRENT" && mc_start_cmd
	fi
}

mc_screen_cmd_func() {
	screen -p 0 -S "$CURRENT" -X eval "stuff \"${1}\"\015"
}

mc_backup_func() {
	mc_screen_cmd_func "save-off"
	mc_screen_cmd_func "save-all"
	sync
	sleep 10
	case "$(date +%H%M)" in
			0300|1500)
				mc_screen_cmd_func "say backing up"
				tar -czf "$BACKUPDIR"/"$CURRENT"."$NOW".tar.gz "$WORLDS"/"$CURRENT"/*
				find "$BACKUPDIR"/ -type f -mtime +3 -exec rm {} \;
			;;
	esac
	mc_screen_cmd_func "save-on"
}

mc_world_stop() {
	for seconds in 15 10 5 ; do
		mc_screen_cmd_func "say stopping in ${seconds}"
		sleep 5
	done
	mc_screen_cmd_func "stop"
}

mc_world_status() {
	if screen -ls | grep "$CURRENT" > /dev/null ; then
		echo "${CURRENT} is running"
	else
		echo "${CURRENT} has stopped"
	fi
}

case "$1" in
	start)
		mc_server_start
		;;
	stop)
		mc_backup_func
		mc_world_stop
		;;
	restart)
		mc_backup_func
		mc_world_stop
		mc_server_start
		;;
	backup)
		mc_backup_func
		;;
	status)
		mc_world_status
		;;
	*)
		echo "Usage: ${0} (start|stop|restart|status)"
		exit 1
		;;
esac
exit 0
